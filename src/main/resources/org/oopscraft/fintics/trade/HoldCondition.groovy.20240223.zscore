package org.oopscraft.fintics.trade

import org.oopscraft.fintics.calculator.*
import org.oopscraft.fintics.model.*

import java.time.LocalTime

def hold = null
def ohlcvs = assetIndicator.getOhlcvs(Ohlcv.Type.MINUTE, 1).findAll{it.dateTime.toLocalDate().equals(dateTime.toLocalDate())}
def period = 20 //ohlcvs.size()
def prices = ohlcvs.collect{it.lowPrice}
def priceZScore = tool.zScore(prices.take(period))
def volumes = ohlcvs.collect{it.volume}
def volumeZScore = tool.zScore(volumes.take(period))
log.info("priceZScore: {}", priceZScore)
log.info("volumeZScore: {}", volumeZScore)

// ema
def priceEmas = tool.calculate(ohlcvs, EmaContext.of(10))
def priceEmaValues = priceEmas.collect{it.value}
def priceEmaZScore = tool.zScore(priceEmaValues)

// macd
def macds = tool.calculate(ohlcvs, MacdContext.DEFAULT)
def macd = macds.first()
def macdValue = macd.value
def macdSignal = macd.signal
def macdOscillator = macd.oscillator
log.info("macd: {}", macd)


if (priceZScore > 1.5) {
    hold = 1
}
if (priceZScore < 0.0) {
    if (macdValue > macdSignal) {
        hold = 0
    }
}

if(dateTime.toLocalTime().isBefore(LocalTime.of(9,10))) {
    hold = null
}

if (dateTime.toLocalTime().isAfter(LocalTime.of(12,0))) {
    if (hold == 1) {
        hold = null
    }
}

if (dateTime.toLocalTime().isAfter(LocalTime.of(15,10))) {
    hold = 0
}

return hold

